C51 COMPILER V9.59.0.0   ACCESCAN                                                          07/16/2021 16:28:18 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ACCESCAN
OBJECT MODULE PLACED IN .\Objects\Accescan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Accescan.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\Accescan.lst) TABS(2) OBJECT(.\Objects\Accescan.obj)

line level    source

   1          #include <Accescan.h>
   2          #include <reg51.h>
   3          #include <string.h>
   4          extern void Block_write_clock_ascii(unsigned char *datos_clock);
   5          extern void PantallaLCD(unsigned char cod_msg);
   6          extern void Reloj_Pantalla_Lcd();
   7          extern unsigned char rx_Data(void);
   8          extern void Debug_txt_Tibbo(unsigned char * str);
   9          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
  10          extern void Debug_Dividir_texto();
  11          extern void tx_aux(unsigned char caracter);
  12          extern unsigned char Dir_board();
  13          extern void Block_read_clock_ascii(unsigned char *datos_clock);
  14          extern void Two_ByteHex_Decimal(unsigned char *buffer,unsigned char id_h,unsigned char id_l);
  15          extern void ByteHex_Decimal(unsigned char *buffer,unsigned char valorhex);
  16          extern void PantallaLCD(unsigned char cod_msg);
  17          extern void LCD_txt (unsigned char * msg,char enable_char_add );
  18          extern unsigned char  ValidaSensoresPaso(void);
  19          extern void tx_aux(unsigned char caracter);
  20          extern void PantallaLCD_LINEA_2(unsigned char cod_msg, unsigned char *buffer);
  21          extern unsigned char hex_bcd (unsigned char byte);
  22          extern void Trama_pto_Paralelo_P(unsigned char *buffer_S1_B0,unsigned char *buffer_S1_B2,unsigned char cmd
             -);
  23          extern void  send_port(unsigned char *buffer_port, unsigned char length_char);
  24          extern void graba_serie(unsigned char *buffer);
  25          extern void graba_serie_ascii_hex(unsigned char *buffer);
  26          unsigned char rd_eeprom (unsigned char control,unsigned int Dir); 
  27          extern unsigned long int  Leer_serie ();
  28          extern void serie_ascii_siceros_l(unsigned char *serie);
  29          extern void Cmd_LPR_Salida_wiegand(unsigned char *buffer);
  30          
  31          extern unsigned char Timer_wait;
  32          extern unsigned char Tipo_Vehiculo;
  33          extern unsigned char USE_LPR;
  34          extern unsigned char  Debug_Tibbo;
  35          extern unsigned char xdata Buffer_Tibbo_rx[];
  36          extern unsigned char ValTimeOutCom;   
  37          
  38          sbit rx_ip = P0^0;        
  39          sbit lock = P1^7;           //Relevo 
  40          sbit Atascado = P0^3;       //Rele de on/off del verificador o transporte
  41          sbit led_err_imp = P0^2;      //Error   
  42          
  43          
  44          #define STX                     02 
  45          #define ETX                     03 
  46          #define FUERA_DE_LINEA          0xb6
  47          #define ON_LINE                 0xAA
  48          
  49          #define PRMR_NO_MENSUAL             0XB1
  50          #define PRMR_NO_IN_PARK             0XB2
  51          #define PRMR_IN_PARK                0XB3
  52          #define PRMR_EXPIRO                 0XB4
  53          #define PRMR_MENSUAL_FUERA_HORARIO  0XB5
C51 COMPILER V9.59.0.0   ACCESCAN                                                          07/16/2021 16:28:18 PAGE 2   

  54          #define PRMR_GRACIAS                'V'
  55          
  56          /*mensajes de pantalla*/
  57          #define BIENVENIDO              0XFE
  58          #define SIN_PAGO                0XE7
  59          #define LECTURA_WIEGAND         92
  60          
  61          #define GRACIAS                 91    
  62          #define NO_MENSUAL_NI_PREPAGO   96
  63          #define NO_IN_PARK              93
  64          #define MENSUAL_FUERA_HORARIO   98
  65          #define IN_PARK                 99
  66          #define EXPIRO                  94
  67          #define BIENVENIDO_WIEGAN       0x9b
  68          
  69          //unsigned char S1_B2[]={0x13, 0x03, 0x1D, 0x0B, 0x0E, 00, 00, 00, 00, 00, 0x01, 0x13, 0x03, 0x1D, 0x0E, 0
             -x1D};
  70          //unsigned char S1_B0[]={0x32, 0x31, 0x30, 0x37, 0x31, 0x35, 00, 00, 00, 00, 00, 00, 00, 00, 00, 01};
  71          //unsigned char S_B[]={0xE7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 01};
  72          /*------------------------------------------------------------------------------
  73          Rutina q valida los cmd del pto paralelo
  74          ------------------------------------------------------------------------------*/
  75          void Valida_Trama_Pto(unsigned char *buffer, unsigned char length_trama)
  76          {
  77   1         unsigned char buff[11];
  78   1        /*-------------------------------CMD H reloj para el board y la pantalla lcd-----------------------------
             --------------*/
  79   1          if((length_trama==25)&&(*buffer==STX)&&(*(buffer+2)=='H')&&*(buffer+(length_trama-1))==ETX)                         
             -/*cmd de Accescan que me envia el reloj actualizado*/
  80   1          { 
  81   2            
  82   2            Block_write_clock_ascii(buffer+3);                                                                                /* se escribe el reloj de har
             -dware*/
  83   2          
  84   2            Reloj_Pantalla_Lcd();                                                                                             /* Escribo el reloj en la pantalla 
             -lcd*/
  85   2          
  86   2          }
  87   1            /*-------------------------------CMD B1 PRMR_NO_MENSUAL_NI PREPAGO ------------------------------------
             ------------------------------*/
  88   1          else if ((*buffer==PRMR_NO_MENSUAL) )                                                                               /*ok si llega msj a;96;NO E
             -S MENSUALIDAD NI PREPAGO<LF>*/
  89   1          {
  90   2            PantallaLCD(NO_MENSUAL_NI_PREPAGO);                                                                                           /*MSJ MENSUAL NO EN PA
             -RQUEADERO*/
  91   2          }   
  92   1            /*-------------------------------CMD B2 PRMR_NO_IN_PARK   ---------------------------------------------
             ---------------------*/
  93   1          else if ((*buffer==PRMR_NO_IN_PARK) )                                                                                 /*ok MSJ MENSUAL NO EN PAR
             -QUEADERO  */
  94   1          {
  95   2            PantallaLCD(NO_IN_PARK);                                                                                            /*MSJ MENSUAL NO EN PARQUEADERO*/
  96   2          } 
  97   1          /*-------------------------------CMD B3 PRMR_IN_PARK   -------------------------------------------------
             -----------------*/
  98   1          else if ((*buffer==PRMR_IN_PARK)  )                                                                                   /*ok msj MENSUAL ESTA EN PAR
             -QUEADER*/
  99   1          {
 100   2            PantallaLCD(IN_PARK);                                                                                           /*MSJ MENSUAL ESTA EN PARQUEADER*/
 101   2          }     
 102   1          /*-------------------------------CMD B4  EXPIRO mensualidad vencida ------------------------------------
             -----------------------*/
C51 COMPILER V9.59.0.0   ACCESCAN                                                          07/16/2021 16:28:18 PAGE 3   

 103   1          else if ((length_trama==1)&&(*buffer==PRMR_EXPIRO))                                                                   /*ok msj mensual ve
             -ncida */
 104   1          {
 105   2               PantallaLCD(EXPIRO);                                                                                             /*mesualidad vencida*/
 106   2          }
 107   1          /*-------------------------------CMD B5  HORARIO mensualidad FUERA DE HORARIO --------------------------
             ---------------------------------*/
 108   1          else if ((length_trama==1)&&(*buffer==PRMR_MENSUAL_FUERA_HORARIO))                                                    /* */
 109   1          {
 110   2               PantallaLCD(MENSUAL_FUERA_HORARIO);                                                                              /*ok msj mesualidad fuera d
             -e horario*/
 111   2          }
 112   1          
 113   1          /*-------------------------------CMD B6 fuera de linea -------------------------------------------------
             -------------*/
 114   1          else if(*buffer==FUERA_DE_LINEA)                                                                                    /*cmd de Accescan que dice q e
             -sta fuera de linea*/
 115   1          {
 116   2            if (Timer_wait>=20)                                                                                               /* se envia el msj fuera de linea*/
 117   2            {                                                                                                                 /* con un tiempo de retardo =((1/(22118400/12
             -)*65535)*30)*/
 118   3              PantallaLCD(FUERA_DE_LINEA);
 119   3              led_err_imp=0;                                                                                                  /*error led on*/
 120   3              Timer_wait=0;
 121   3              lock=0;                                                                                                         /*relevo off despues de 1 minuto*/
 122   3              Atascado=0;
 123   3              ValTimeOutCom=10;       
 124   3            }
 125   2            if ((Debug_Tibbo==0)&&(USE_LPR==1))
 126   2              {
 127   3              Debug_Tibbo=1;
 128   3              Debug_txt_Tibbo((unsigned char *) "LIVE\n");
 129   3            
 130   3              Debug_Tibbo=0;
 131   3              }
 132   2          }
 133   1          /*-------------------------------CMD AA en linea -------------------------------------------------------
             ------------*/
 134   1          else if (*buffer==ON_LINE)                                                                                          /*en linea*/
 135   1          {
 136   2            
 137   2            if (Timer_wait>=20)                                                                                               /* se envia el msj fuera de linea*/
 138   2            { 
 139   3              Timer_wait=0;                                                                                                   /*se inicia el timer*/
 140   3              lock=0;
 141   3              led_err_imp=1;                                                                                                  /*relevo off despues de 1 minuto*/
 142   3              Atascado=0; 
 143   3              ValTimeOutCom=10;
 144   3              if ((Debug_Tibbo==0)&&(USE_LPR==1))
 145   3              {
 146   4              Debug_Tibbo=1;
 147   4              Debug_txt_Tibbo((unsigned char *) "LIVE\n");
 148   4              
 149   4              Debug_Tibbo=0;
 150   4              }
 151   3            }
 152   2            
 153   2          } 
 154   1          /*-------------------------------CMD 'V'=PRMR_GRACIAS  msj Gracias y nombre del mensual-----------------
             -------------------------*/
 155   1          else if ((length_trama == 0x13)&& (*(buffer+1)==PRMR_GRACIAS)&&*(buffer+(length_trama-1))==ETX)                 
             -        /* */
C51 COMPILER V9.59.0.0   ACCESCAN                                                          07/16/2021 16:28:18 PAGE 4   

 156   1          {
 157   2               *(buffer+(length_trama-1))=0;
 158   2               PantallaLCD_LINEA_2(GRACIAS,buffer+2);                                                                     /*SE ENVIA EL MSJ GRACIAS lo
             - q envia el software*/
 159   2          }
 160   1          /*-------------------------------CMD 'O'=PRMR_BIENVENIDO  msj BIENVENIDO  nombre del mensual------------
             ------------------------------*/
 161   1          else if ((length_trama==19)&&(*buffer==STX)&&(*(buffer+1)=='O')&&*(buffer+(length_trama-1))==ETX)             
             -      /*mensaje de bienvenidos*/
 162   1          {
 163   2            *(buffer+(length_trama-1))=0;
 164   2               PantallaLCD_LINEA_2(BIENVENIDO_WIEGAN,buffer+2);       
 165   2          }
 166   1          else if ((length_trama==1)&&(*buffer==0xA1))                                                                        /*cmd 0xA1 audio caja qu
             -e es igual a no registra pago */
 167   1          {
 168   2               PantallaLCD(SIN_PAGO);
 169   2          }
 170   1                    /*-------------------------------CMD de wiegand---------------------------------------------------*
             -/
 171   1          else if ((length_trama==6)&&(*buffer==STX)&&(*(buffer+1)=='W')&&*(buffer+(length_trama-1))==ETX)                
             -    /* cmd q comunica con monitor po wigan*/
 172   1          {
 173   2            /*-------------------------------se covierte el numero serie de la tarjeta-----------------------------
             --*/
 174   2                    ByteHex_Decimal(buff,*(buffer+2));                                                                        /*convierto el primer byte_he
             -x a decimal    */
 175   2                    buff[3]=' ';
 176   2                    Two_ByteHex_Decimal(buff+4,*(buffer+3),*(buffer+4)) ;   
 177   2              if (USE_LPR==1)
 178   2              {
 179   3                                                                        /*convierto un byte de 16 bits a decimal*/                                                  
 180   3                  
 181   3                    PantallaLCD_LINEA_2(LECTURA_WIEGAND,buff);
 182   3                                                                                                                              /*transmito el codigo de la tarjeta a la panta
             -lla lcd*/
 183   3                    /*-------------------------------------------------------------------------------------------------
             --------*/
 184   3                
 185   3                  //  while(!ValidaSensoresPaso());
 186   3                      
 187   3                    Cmd_LPR_Salida_wiegand(buff);
 188   3              }                                                                             
 189   2              
 190   2              else
 191   2              {
 192   3                 /*-------------------------------mensaje en la pantalla---------------------------------------------
             -------*/
 193   3                                                              /*convierto un byte de 16 bits a decimal*/                                                  
 194   3                    PantallaLCD_LINEA_2(LECTURA_WIEGAND,buff);                                                            /*transmito el codigo de la
             - tarjeta a la pantalla lcd*/
 195   3                                                                                                          
 196   3                /*---------------------------------------------------------------------------------------------------
             ------*/  
 197   3              
 198   3              }
 199   2          }
 200   1          else if ((length_trama==12)&&(*buffer==STX)&&*(buffer+(length_trama-1))==ETX)                                   /*graba e
             -l numero de consecutivo en eeprom*/
 201   1          {
 202   2            graba_serie_ascii_hex(buffer+1);
 203   2            
C51 COMPILER V9.59.0.0   ACCESCAN                                                          07/16/2021 16:28:18 PAGE 5   

 204   2            
 205   2              Debug_txt_Tibbo((unsigned char *) "Grabacion Serie: ");                                                     /*trama recibida pto
             - paralelo */
 206   2              DebugBufferMF(buffer,length_trama,1);
 207   2              
 208   2            
 209   2          }
 210   1      }
 211          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    810    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
