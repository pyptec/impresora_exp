C51 COMPILER V9.59.0.0   ACCESCAN                                                          08/10/2021 14:27:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ACCESCAN
OBJECT MODULE PLACED IN .\Objects\Accescan.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Accescan.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\Accescan.lst) TABS(2) OBJECT(.\Objects\Accescan.obj)

line level    source

   1          #include <Accescan.h>
   2          #include <reg51.h>
   3          #include <string.h>
   4          extern void Block_write_clock_ascii(unsigned char *datos_clock);
   5          extern void PantallaLCD(unsigned char cod_msg);
   6          extern void Reloj_Pantalla_Lcd();
   7          extern unsigned char rx_Data(void);
   8          extern void Debug_txt_Tibbo(unsigned char * str);
   9          extern void DebugBufferMF(unsigned char *str,unsigned char num_char,char io);
  10          extern void Debug_Dividir_texto();
  11          extern void tx_aux(unsigned char caracter);
  12          extern unsigned char Dir_board();
  13          extern void Block_read_clock_ascii(unsigned char *datos_clock);
  14          extern void Two_ByteHex_Decimal(unsigned char *buffer,unsigned char id_h,unsigned char id_l);
  15          extern void ByteHex_Decimal(unsigned char *buffer,unsigned char valorhex);
  16          extern void PantallaLCD(unsigned char cod_msg);
  17          extern void LCD_txt (unsigned char * msg,char enable_char_add );
  18          extern unsigned char  ValidaSensoresPaso(void);
  19          extern void tx_aux(unsigned char caracter);
  20          extern void PantallaLCD_LINEA_2(unsigned char cod_msg, unsigned char *buffer);
  21          extern unsigned char hex_bcd (unsigned char byte);
  22          extern void Trama_pto_Paralelo_P(unsigned char *buffer_S1_B0,unsigned char *buffer_S1_B2,unsigned char cmd
             -);
  23          extern void  send_port(unsigned char *buffer_port, unsigned char length_char);
  24          extern void graba_serie(unsigned char *buffer);
  25          extern void graba_serie_ascii_hex(unsigned char *buffer);
  26          unsigned char rd_eeprom (unsigned char control,unsigned int Dir); 
  27          extern unsigned long int  Leer_serie ();
  28          extern void serie_ascii_siceros_l(unsigned char *serie);
  29          extern void Cmd_LPR_Salida_wiegand(unsigned char *buffer);
  30          extern void Formato_eeprom();
  31          
  32          extern unsigned char Timer_wait;
  33          extern unsigned char Tipo_Vehiculo;
  34          extern unsigned char USE_LPR;
  35          extern unsigned char  Debug_Tibbo;
  36          extern unsigned char xdata Buffer_Tibbo_rx[];
  37          extern unsigned char ValTimeOutCom;   
  38          
  39          sbit rx_ip = P0^0;        
  40          sbit lock = P1^7;           //Relevo 
  41          sbit Atascado = P0^3;       //Rele de on/off del verificador o transporte
  42          sbit led_err_imp = P0^2;      //Error   
  43          
  44          
  45          #define STX                     02 
  46          #define ETX                     03 
  47          #define LOTE_FULL               05
  48          #define FUERA_DE_LINEA          0xb6
  49          #define ON_LINE                 0xAA
  50          
  51          #define PRMR_NO_MENSUAL             0XB1
  52          #define PRMR_NO_IN_PARK             0XB2
  53          #define PRMR_IN_PARK                0XB3
C51 COMPILER V9.59.0.0   ACCESCAN                                                          08/10/2021 14:27:45 PAGE 2   

  54          #define PRMR_EXPIRO                 0XB4
  55          #define PRMR_MENSUAL_FUERA_HORARIO  0XB5
  56          #define PRMR_GRACIAS                'V'
  57          #define PRMR_MSJ_EXCLUSIVO          0X55
  58          
  59          /*mensajes de pantalla*/
  60          #define BIENVENIDO              0XFE
  61          #define SIN_PAGO                0XE7
  62          #define LECTURA_WIEGAND         92
  63          
  64          #define GRACIAS                 91    
  65          #define NO_MENSUAL_NI_PREPAGO   96
  66          #define NO_IN_PARK              93
  67          #define MENSUAL_FUERA_HORARIO   98
  68          #define IN_PARK                 99
  69          #define EXPIRO                  94
  70          #define BIENVENIDO_WIEGAN       0x9b
  71          
  72          //unsigned char S1_B2[]={0x13, 0x03, 0x1D, 0x0B, 0x0E, 00, 00, 00, 00, 00, 0x01, 0x13, 0x03, 0x1D, 0x0E, 0
             -x1D};
  73          //unsigned char S1_B0[]={0x32, 0x31, 0x30, 0x37, 0x31, 0x35, 00, 00, 00, 00, 00, 00, 00, 00, 00, 01};
  74          //unsigned char S_B[]={0xE7, 00, 00, 00, 00, 00, 00, 00, 00, 00, 01};
  75          /*------------------------------------------------------------------------------
  76          Rutina q valida los cmd del pto paralelo
  77          ------------------------------------------------------------------------------*/
  78          void Valida_Trama_Pto(unsigned char *buffer, unsigned char length_trama)
  79          {
  80   1         unsigned char buff[11];
  81   1        /*-------------------------------CMD H reloj para el board y la pantalla lcd-----------------------------
             --------------*/
  82   1          if((length_trama==25)&&(*buffer==STX)&&(*(buffer+2)=='H')&&*(buffer+(length_trama-1))==ETX)                         
             -/*cmd de Accescan que me envia el reloj actualizado*/
  83   1          { 
  84   2            
  85   2            Block_write_clock_ascii(buffer+3);                                                                                /* se escribe el reloj de har
             -dware*/
  86   2          
  87   2            Reloj_Pantalla_Lcd();                                                                                             /* Escribo el reloj en la pantalla 
             -lcd*/
  88   2          
  89   2          }
  90   1            /*-------------------------------CMD 05 lote full -----------------------------------------------------
             -------------*/
  91   1          else if ((*buffer==LOTE_FULL) )                                                                               /*ok si llega msj a;96;NO ES MENS
             -UALIDAD NI PREPAGO<LF>*/
  92   1          {
  93   2            PantallaLCD(LOTE_FULL);                                                                                           /*MSJ MENSUAL NO EN PARQUEADERO*/
  94   2          }   
  95   1            /*-------------------------------CMD B1 PRMR_NO_MENSUAL_NI PREPAGO ------------------------------------
             ------------------------------*/
  96   1          else if ((*buffer==PRMR_NO_MENSUAL) )                                                                               /*ok si llega msj a;96;NO E
             -S MENSUALIDAD NI PREPAGO<LF>*/
  97   1          {
  98   2            PantallaLCD(NO_MENSUAL_NI_PREPAGO);                                                                                           /*MSJ MENSUAL NO EN PA
             -RQUEADERO*/
  99   2          }   
 100   1            /*-------------------------------CMD B2 PRMR_NO_IN_PARK   ---------------------------------------------
             ---------------------*/
 101   1          else if ((*buffer==PRMR_NO_IN_PARK) )                                                                                 /*ok MSJ MENSUAL NO EN PAR
             -QUEADERO  */
 102   1          {
 103   2            PantallaLCD(NO_IN_PARK);                                                                                            /*MSJ MENSUAL NO EN PARQUEADERO*/
C51 COMPILER V9.59.0.0   ACCESCAN                                                          08/10/2021 14:27:45 PAGE 3   

 104   2          } 
 105   1          /*-------------------------------CMD B3 PRMR_IN_PARK   -------------------------------------------------
             -----------------*/
 106   1          else if ((*buffer==PRMR_IN_PARK)  )                                                                                   /*ok msj MENSUAL ESTA EN PAR
             -QUEADER*/
 107   1          {
 108   2            PantallaLCD(IN_PARK);                                                                                           /*MSJ MENSUAL ESTA EN PARQUEADER*/
 109   2          }     
 110   1          /*-------------------------------CMD B4  EXPIRO mensualidad vencida ------------------------------------
             -----------------------*/
 111   1          else if ((length_trama==1)&&(*buffer==PRMR_EXPIRO))                                                                   /*ok msj mensual ve
             -ncida */
 112   1          {
 113   2               PantallaLCD(EXPIRO);                                                                                             /*mesualidad vencida*/
 114   2          }
 115   1          /*-------------------------------CMD B5  HORARIO mensualidad FUERA DE HORARIO --------------------------
             ---------------------------------*/
 116   1          else if ((length_trama==1)&&(*buffer==PRMR_MENSUAL_FUERA_HORARIO))                                                    /* */
 117   1          {
 118   2               PantallaLCD(MENSUAL_FUERA_HORARIO);                                                                              /*ok msj mesualidad fuera d
             -e horario*/
 119   2          }
 120   1          
 121   1          /*-------------------------------CMD B6 fuera de linea -------------------------------------------------
             -------------*/
 122   1          else if(*buffer==FUERA_DE_LINEA)                                                                                    /*cmd de Accescan que dice q e
             -sta fuera de linea*/
 123   1          {
 124   2            if (Timer_wait>=20)                                                                                               /* se envia el msj fuera de linea*/
 125   2            {                                                                                                                 /* con un tiempo de retardo =((1/(22118400/12
             -)*65535)*30)*/
 126   3              PantallaLCD(FUERA_DE_LINEA);
 127   3              led_err_imp=0;                                                                                                  /*error led on*/
 128   3              Timer_wait=0;
 129   3              lock=0;                                                                                                         /*relevo off despues de 1 minuto*/
 130   3              Atascado=0;
 131   3              ValTimeOutCom=10;       
 132   3            }
 133   2            if ((Debug_Tibbo==0)&&(USE_LPR==1))
 134   2              {
 135   3              Debug_Tibbo=1;
 136   3              Debug_txt_Tibbo((unsigned char *) "LIVE\n");
 137   3            
 138   3              Debug_Tibbo=0;
 139   3              }
 140   2          }
 141   1              /*------------------------------- CMD 55 PRMR_MSJ_EXCLUSIVO  -----------------------------------------
             --------------------------*/
 142   1          else if ((length_trama==3)&&(*(buffer+1)==PRMR_MSJ_EXCLUSIVO)&&*(buffer+(length_trama-1))==ETX)                 
             -                                                      /* */
 143   1          {
 144   2               Formato_eeprom();                                                                                            /*mesualidad vencida*/
 145   2          } 
 146   1          /*-------------------------------CMD AA en linea -------------------------------------------------------
             ------------*/
 147   1          else if (*buffer==ON_LINE)                                                                                          /*en linea*/
 148   1          {
 149   2            
 150   2            if (Timer_wait>=20)                                                                                               /* se envia el msj fuera de linea*/
 151   2            { 
 152   3              Timer_wait=0;                                                                                                   /*se inicia el timer*/
 153   3              lock=0;
C51 COMPILER V9.59.0.0   ACCESCAN                                                          08/10/2021 14:27:45 PAGE 4   

 154   3              led_err_imp=1;                                                                                                  /*relevo off despues de 1 minuto*/
 155   3              Atascado=0; 
 156   3              ValTimeOutCom=10;
 157   3              if ((Debug_Tibbo==0)&&(USE_LPR==1))
 158   3              {
 159   4              Debug_Tibbo=1;
 160   4              Debug_txt_Tibbo((unsigned char *) "LIVE\n");
 161   4              
 162   4              Debug_Tibbo=0;
 163   4              }
 164   3            }
 165   2            
 166   2          } 
 167   1          /*-------------------------------CMD 'V'=PRMR_GRACIAS  msj Gracias y nombre del mensual-----------------
             -------------------------*/
 168   1          else if ((length_trama == 0x13)&& (*(buffer+1)==PRMR_GRACIAS)&&*(buffer+(length_trama-1))==ETX)                 
             -        /* */
 169   1          {
 170   2               *(buffer+(length_trama-1))=0;
 171   2               PantallaLCD_LINEA_2(GRACIAS,buffer+2);                                                                     /*SE ENVIA EL MSJ GRACIAS lo
             - q envia el software*/
 172   2          }
 173   1          /*-------------------------------CMD 'O'=PRMR_BIENVENIDO  msj BIENVENIDO  nombre del mensual------------
             ------------------------------*/
 174   1          else if ((length_trama==19)&&(*buffer==STX)&&(*(buffer+1)=='O')&&*(buffer+(length_trama-1))==ETX)             
             -      /*mensaje de bienvenidos*/
 175   1          {
 176   2            *(buffer+(length_trama-1))=0;
 177   2               PantallaLCD_LINEA_2(BIENVENIDO_WIEGAN,buffer+2);       
 178   2          }
 179   1          else if ((length_trama==1)&&(*buffer==0xA1))                                                                        /*cmd 0xA1 audio caja qu
             -e es igual a no registra pago */
 180   1          {
 181   2               PantallaLCD(SIN_PAGO);
 182   2          }
 183   1                    /*-------------------------------CMD de wiegand---------------------------------------------------*
             -/
 184   1          else if ((length_trama==6)&&(*buffer==STX)&&(*(buffer+1)=='W')&&*(buffer+(length_trama-1))==ETX)                
             -    /* cmd q comunica con monitor po wigan*/
 185   1          {
 186   2            /*-------------------------------se covierte el numero serie de la tarjeta-----------------------------
             --*/
 187   2                    ByteHex_Decimal(buff,*(buffer+2));                                                                        /*convierto el primer byte_he
             -x a decimal    */
 188   2                    buff[3]=' ';
 189   2                    Two_ByteHex_Decimal(buff+4,*(buffer+3),*(buffer+4)) ;   
 190   2              if (USE_LPR==1)
 191   2              {
 192   3                                                                        /*convierto un byte de 16 bits a decimal*/                                                  
 193   3                  
 194   3                    PantallaLCD_LINEA_2(LECTURA_WIEGAND,buff);
 195   3                                                                                                                              /*transmito el codigo de la tarjeta a la panta
             -lla lcd*/
 196   3                    /*-------------------------------------------------------------------------------------------------
             --------*/
 197   3                
 198   3                  //  while(!ValidaSensoresPaso());
 199   3                      
 200   3                    Cmd_LPR_Salida_wiegand(buff);
 201   3              }                                                                             
 202   2              
 203   2              else
C51 COMPILER V9.59.0.0   ACCESCAN                                                          08/10/2021 14:27:45 PAGE 5   

 204   2              {
 205   3                 /*-------------------------------mensaje en la pantalla---------------------------------------------
             -------*/
 206   3                                                              /*convierto un byte de 16 bits a decimal*/                                                  
 207   3                    PantallaLCD_LINEA_2(LECTURA_WIEGAND,buff);                                                            /*transmito el codigo de la
             - tarjeta a la pantalla lcd*/
 208   3                                                                                                          
 209   3                /*---------------------------------------------------------------------------------------------------
             ------*/  
 210   3              
 211   3              }
 212   2          }
 213   1          else if ((length_trama==12)&&(*buffer==STX)&&*(buffer+(length_trama-1))==ETX)                                   /*graba e
             -l numero de consecutivo en eeprom*/
 214   1          {
 215   2            graba_serie_ascii_hex(buffer+1);
 216   2            
 217   2            
 218   2              Debug_txt_Tibbo((unsigned char *) "Grabacion Serie: ");                                                     /*trama recibida pto
             - paralelo */
 219   2              DebugBufferMF(buffer,length_trama,1);
 220   2              
 221   2            
 222   2          }
 223   1      }
 224          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    884    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
