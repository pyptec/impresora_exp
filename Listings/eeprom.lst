C51 COMPILER V9.59.0.0   EEPROM                                                            08/10/2021 14:27:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE eeprom.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\eeprom.lst) TABS(2) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          
   2          #include <eeprom.h>
   3          #include <reg51.h>
   4          #include <string.h>
   5          /*funciones externas*/
   6          
   7          extern void          _nop_     (void);
   8          extern void Delay (void);
   9          extern void Delay_20us(unsigned int cnt);
  10          extern void Delay_1ms(unsigned int cnt);
  11          
  12          extern void Debug_Dividir_texto();
  13          extern void Debug_txt_Tibbo(unsigned char * str);
  14          extern void Debug_chr_Tibbo(unsigned char Dat);
  15          //******************************************************************************************
  16          //    RUTINAS DE EEPROM 24FC1025
  17          //******************************************************************************************
  18          sbit sda = P1^2;
  19          sbit scl = P1^3;
  20          //******************************************************************************************
  21          
  22          bit memory_flag;
  23          unsigned char byte_rd;
  24          unsigned char l_data_eeprom;
  25          unsigned char l_chr;
  26          
  27          /*define posiciones de memoria*/
  28          #define EE_ID_CLIENTE   0x0000
  29          #define EE_FECHA_VENCIMIENTO    0X0350
  30          
  31          
  32          //*******************************************************************************************
  33          void ackd(void)
  34          {
  35   1        unsigned int i;
  36   1        memory_flag=1;
  37   1        scl=1;
  38   1        sda=1;
  39   1        for (i=0; i<1100; i++)             //500
  40   1        {
  41   2          if (sda==0)
  42   2          {
  43   3            memory_flag=0;
  44   3          scl=0;
  45   3      
  46   3          break;
  47   3          }
  48   2        }
  49   1        
  50   1        if (memory_flag==1)
  51   1        { 
  52   2      
  53   2        }  
  54   1      } 
C51 COMPILER V9.59.0.0   EEPROM                                                            08/10/2021 14:27:45 PAGE 2   

  55          //*******************************************************************************************
  56          //*******************************************************************************************
  57          void ack_lect(void)
  58          {
  59   1        int i;
  60   1        scl=1;
  61   1        sda=1;
  62   1        memory_flag=1;
  63   1        for (i=0; i<650; i++)
  64   1        {
  65   2          if (sda==0)
  66   2          {
  67   3            memory_flag=0;
  68   3          scl=0;
  69   3          break;
  70   3          }
  71   2        }
  72   1      } 
  73          //*******************************************************************************************
  74          void p_me (void)
  75          {
  76   1          scl=1;
  77   1          _nop_();
  78   1          scl=0;
  79   1      }
  80          //*******************************************************************************************
  81          void e_d_m (unsigned char a_serial_eeprom)
  82          {
  83   1        unsigned char nbits;
  84   1          for (nbits=0; nbits<8; nbits++)
  85   1        {
  86   2          a_serial_eeprom <<=1;
  87   2          if (CY==1)
  88   2          { 
  89   3            sda=1;
  90   3          }
  91   2          else
  92   2          {
  93   3            sda=0;
  94   3          }
  95   2          scl=1;
  96   2          p_me();         
  97   2        }
  98   1        return;
  99   1      }
 100          //********************************************************************************************
 101          void start (void)
 102          {
 103   1        sda=1;
 104   1        scl=1;
 105   1        _nop_();
 106   1        sda=0;
 107   1        scl=0;
 108   1        return;
 109   1      }
 110          //*******************************************************************************************
 111          void stop (void)
 112          {
 113   1        scl=0;
 114   1        sda=0;
 115   1        scl=1;
 116   1        sda=1;
C51 COMPILER V9.59.0.0   EEPROM                                                            08/10/2021 14:27:45 PAGE 3   

 117   1        return;
 118   1      }
 119          //*******************************************************************************************
 120          unsigned char l_d_m (void)
 121          {
 122   1        unsigned char nbits;
 123   1          for (nbits=0; nbits<8; nbits++)
 124   1        {
 125   2          scl=0;
 126   2            if (sda==1) 
 127   2            {
 128   3            l_data_eeprom = l_data_eeprom| 0x01;
 129   3            if (nbits<=6) 
 130   3            {
 131   4              l_data_eeprom<<=1;
 132   4              scl=1;
 133   4            }
 134   3            }
 135   2            if (sda==0)
 136   2            {
 137   3              l_data_eeprom = l_data_eeprom & 0xFE;
 138   3            if (nbits<=6) 
 139   3            {
 140   4                l_data_eeprom <<=1;
 141   4              scl=1;
 142   4            }
 143   3            }
 144   2          }
 145   1        scl=0;
 146   1        return l_data_eeprom;
 147   1      }
 148          //*******************************************************************************************
 149          //*******************************************************************************************
 150          //  ESCRIBE EN EEPROM                                   *
 151          //*******************************************************************************************
 152          //void wr_eeprom (unsigned char control,unsigned char dir_h,unsigned char dir_l,unsigned char data_eeprom)
 153          void wr_eeprom (unsigned char control,unsigned int Dir, unsigned char data_eeprom)
 154          {
 155   1        unsigned char dir_h, dir_l;
 156   1        dir_l=Dir;
 157   1        Dir>>=8;
 158   1        dir_h=Dir;
 159   1      
 160   1      
 161   1        scl=0;
 162   1        sda=0;
 163   1      //  wait();
 164   1          start();
 165   1        e_d_m(control);
 166   1        ackd();
 167   1        e_d_m(dir_h);
 168   1        ackd();
 169   1        e_d_m(dir_l);
 170   1        ackd();
 171   1        e_d_m(data_eeprom);
 172   1        ackd();
 173   1        stop();
 174   1        Delay_1ms(13);
 175   1        
 176   1        scl=1;
 177   1        sda=1;
 178   1        Delay_20us(98);                   /*wait long*/
C51 COMPILER V9.59.0.0   EEPROM                                                            08/10/2021 14:27:45 PAGE 4   

 179   1        Delay_20us(98);
 180   1      }
 181          /*------------------------------------------------------------------------------
 182            ESCRIBE EN EEPROM n caracteres     pasados en un apuntador                              
 183          ------------------------------------------------------------------------------*/
 184          /*
 185          void wrpage_eeprom (unsigned char control,unsigned int Dir,unsigned char *data_eeprom)  
 186          {
 187            unsigned int j;
 188            unsigned char dir_h, dir_l,num_chr;
 189            dir_l=Dir;
 190            //Dir>>=8;
 191            dir_h=Dir >>8;
 192            num_chr=strlen(data_eeprom);
 193            Debug_Dividir_texto();  
 194            Debug_txt_Tibbo(data_eeprom)  ;
 195            Debug_chr_Tibbo(num_chr);
 196            Debug_Dividir_texto();      
 197            scl=0;
 198            sda=0;
 199            //wait();
 200            Delay_20us(98);
 201            Delay_20us(98);
 202            //wait();
 203          
 204              start();
 205            e_d_m(control);
 206            ackd();
 207            e_d_m(dir_h);
 208            ackd();
 209            e_d_m(dir_l);
 210            ackd();
 211            for (j=0; j<=num_chr; j++)
 212            {
 213              e_d_m(*data_eeprom);
 214              data_eeprom++;
 215              ackd();
 216            }
 217            stop();
 218            Delay_1ms(13);
 219            scl=1;
 220            sda=1;
 221           
 222          }   
 223          */
 224          //******************************************************************************************* 
 225          //******************************************************************************************* 
 226          //  LEE EN EEPROM                                     *
 227          //*******************************************************************************************
 228          
 229          unsigned char rd_eeprom (unsigned char control,unsigned int Dir) 
 230          {
 231   1      
 232   1        unsigned char dir_h, dir_l;
 233   1        dir_l=Dir;
 234   1        Dir>>=8;
 235   1        dir_h=Dir;
 236   1        
 237   1        scl=0;
 238   1        sda=0;
 239   1       // wait();
 240   1        start();
C51 COMPILER V9.59.0.0   EEPROM                                                            08/10/2021 14:27:45 PAGE 5   

 241   1        e_d_m(control);
 242   1        ack_lect();
 243   1        e_d_m(dir_h);
 244   1          ack_lect();
 245   1        e_d_m(dir_l);
 246   1        ack_lect();
 247   1        start();
 248   1        e_d_m(control+0x01);
 249   1        ackd();
 250   1        scl=0;
 251   1        l_d_m();
 252   1        stop();
 253   1          scl=1;
 254   1        sda=1;
 255   1        return l_data_eeprom;
 256   1      }
 257          
 258          /*--------------------------------------------------------------------------------------------------------
             --------------------------------
 259          Rutina que lee la eeprom  en bloque 
 260          ----------------------------------------------------------------------------------------------------------
             -------------------------------*/
 261          void LeerMemoria(unsigned int addres,unsigned char *res)
 262          {
 263   1        
 264   1      
 265   1      unsigned char i;
 266   1      do 
 267   1        {
 268   2        *res=rd_eeprom (0xa8,addres);
 269   2        i=*res;
 270   2        addres++;
 271   2        res++;
 272   2        }
 273   1        while(i !='\0');
 274   1        
 275   1      }
 276          /*--------------------------------------------------------------------------------------------------------
             --------------------------------
 277          escribe un bloque de datos en la eeprom
 278            Escribe hasta encontrar el CR y lo cambia por (0) que es el fin de la cadena
 279          ----------------------------------------------------------------------------------------------------------
             -------------------------------*/
 280          
 281          void EscribirMemoria(unsigned char control,unsigned int  addres,unsigned char  *res)
 282          {
 283   1      
 284   1      while(*res !='\0')                                  /**/
 285   1        {
 286   2          if(*res =='\r')
 287   2          {
 288   3            
 289   3            *res='\0';
 290   3          }  
 291   2          wr_eeprom(control,addres,*res);         
 292   2          addres++;
 293   2          res++;
 294   2        }
 295   1        *res=0;
 296   1        wr_eeprom(control,addres,*res); 
 297   1      }
 298          void Formato_eeprom()
C51 COMPILER V9.59.0.0   EEPROM                                                            08/10/2021 14:27:45 PAGE 6   

 299          {
 300   1      unsigned char dato=0xff;
 301   1      unsigned int i;
 302   1        for(i=0; i< EE_FECHA_VENCIMIENTO; i++)
 303   1        {
 304   2            wr_eeprom(0xa8,i,dato);
 305   2        }
 306   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    608    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
